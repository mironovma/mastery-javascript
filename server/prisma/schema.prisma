generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                  String @id @default(uuid())
  email               String @unique
  password            String
  username            String?
  isActivated         Boolean @default(false)
  activationLink      String?
  restorePasswordCode String?
  registrationDate    DateTime @default(now())
  token               Token?

  userCards           UserCard[]
  userCategories      UserCategory[]
  userStatistics      UserStatistics[]
}

model Token {
  id                  String @id @default(uuid())
  refreshToken        String
  userId              String

  user                User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId])
}

model Category {
  id                  String @id @default(uuid())
  name                String @unique
  description         String?
  cards               Card[]
  users               UserCategory[]
}

model Card {
  id                  String @id @default(uuid())
  question            String
  shortAnswer         String
  detailedAnswer      String?
  options             Json? // для хранения массива вариантов ответа
  categoryId          String
  category            Category  @relation(fields: [categoryId], references: [id])
  userCards           UserCard[]
}

model UserCategory {
  id                  String @id @default(uuid())
  userId              String
  categoryId          String
  user                User @relation(fields: [userId], references: [id])
  category            Category @relation(fields: [categoryId], references: [id])

  @@unique([userId, categoryId])
}

model UserCard {
  id                  String   @id @default(uuid())
  userId              String
  cardId              String
  status              String   // ["learning", "known"]
  nextReview          DateTime
  reviewCount         Int      @default(0)
  user                User     @relation(fields: [userId], references: [id])
  card                Card     @relation(fields: [cardId], references: [id])

  @@unique([userId, cardId])
}

model UserStatistics {
  id                  String   @id @default(uuid())
  userId              String
  date                DateTime @default(now())
  newCards            Int      @default(0)
  repeatedCards       Int      @default(0)
  learnedCards        Int      @default(0)
  user                User     @relation(fields: [userId], references: [id])

  @@unique([userId, date])
}



// npx prisma generate
// npx prisma db push
// npx prisma studio
// npx prisma migrate reset