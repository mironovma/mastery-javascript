import { observer } from "mobx-react-lite";

import { CongratsWindow } from "@/widgets/congrats-window";
import { Card } from "@/entities/card";
import { useMobxStore } from "@/shared/hooks/useMobxStore";
import { Skeleton } from "@/shared/ui/skeleton";

export const CardLearn = observer(() => {
    const { auth, card, category, settings, statistic } = useMobxStore();

    const isLoading =
        settings.isLoading ||
        card.isLoading ||
        statistic.isLoading ||
        category.isLoading;

    if (isLoading) {
        return <Skeleton className="w-full h-card" />;
    }

    const { dailyCards } = settings.userSettings?.[0].settings ?? {};

    if (
        dailyCards !== undefined &&
        statistic.statisticToday?.newCards !== undefined &&
        statistic.statisticToday.newCards >= dailyCards
    ) {
        return (
            <CongratsWindow
                description="–≤—ã—É—á–∏–ª–∏"
                cardsAmount={statistic.statisticToday.newCards}
            />
        );
    }

    if (!card.card) {
        /**
         * TODO: –≤–º–µ—Å—Ç–æ —Ç–∞–∫–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è, —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∫–æ–º–ø–æ–Ω–µ–Ω –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –∫–∏–¥–∞—Ç—å,
         * –µ—Å–ª–∏ –≤–¥—Ä—É–≥ –±—É–¥–µ—Ç —Å–∏—Ç—É–∞—Ü–∏—è, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—É—á–∏—Ç –≤—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –∏–∑ –ë–î
         */
        return (
            <Skeleton className="w-full h-card flex justify-center items-center">
                <p className="text-center w-4/5">
                    –í—Å–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å üòû –û–∂–∏–¥–∞–π—Ç–µ, –∫–æ–≥–¥–∞
                    –∫–æ–º—å—é–Ω–∏—Ç–∏ –¥–æ–±–∞–≤–∏—Ç –Ω–æ–≤—ã–µ –∫–∞—Ä—Ç–æ—á–∫–∏. –ê —Å–µ–π—á–∞—Å –ø–æ–ø—Ä–æ–±—É–π—Ç–µ
                    –ø–æ–≤—Ç–æ—Ä–∏—Ç—å —É–∂–µ –∏–∑—É—á–µ–Ω–Ω—ã–µ üòÉ
                </p>
            </Skeleton>
        );
    }

    const categoryItem = category.userCategories.find(
        (cat) => cat.id === card.card?.categoryId,
    );

    if (!categoryItem) {
        return (
            <Skeleton className="w-full h-card flex justify-center items-center">
                <p className="text-center w-4/5">
                    –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –±—ã–ª–∞ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ –Ω–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è
                    –∏–∑—É—á–µ–Ω–∏—è üòû
                </p>
            </Skeleton>
        );
    }

    const categoryName = categoryItem.name;

    return (
        <Card
            category={categoryName}
            question={card.card.question}
            shortAnswer={card.card.shortAnswer}
            detailedAnswer={card.card.detailedAnswer}
            options={card.card.options}
            acceptButtonLabel="–Ø —É–∂–µ –∑–Ω–∞—é —ç—Ç—É –∫–∞—Ä—Ç–æ—á–∫—É"
            declineButtonLabel="–ù–∞—á–∞—Ç—å —É—á–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É"
            onAccept={() => card.onEndLearn(auth.user.id, card.card!.id)}
            onDecline={() => card.onStartLearn(auth.user.id, card.card!.id)}
        />
    );
});
